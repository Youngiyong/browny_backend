service: browny-backend
plugins:
  - serverless-webpack
  - serverless-offline
  
frameworkVersion: '2'
# env 파일 사용
custom:
  # service application 내 전역적으로 사용하는 서비스 네임, 기본 리소스명이기도 함
  SERVICE_NAME: ${self:service}-${self:provider.stage}
  webpack:
    webpackConfig: 'webpack.config.js'
    packager: 'yarn'
    includeModules: true

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-2
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    blockPublicAccess: true # Prevents public access via ACLs or bucket policies. Default is false
    name: ${ssm:DEPLOYMENT_BUCKET} # Deployment bucket name. Default is generated by the framework
    maxPreviousDeploymentArtifacts: 5 # On every deployment the framework prunes the bucket to remove artifacts older than this limit. The default is 5

  environment:
    # https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/node-reusing-connections.html
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    # 기본 : 배포설정, argements 로 입력
    STAGE: ${self:provider.stage}
    # 기본 : labda 타임존 설정
    TZ: "Asia/Seoul"

    # 리소스 설정
    RDS_PORT: ${ssm:RDS_PORT}
    RDS_DATABASE: ${ssm:RDS_DATABASE}
    RDS_USERNAME: ${ssm:RDS_USERNAME}
    RDS_PASSWORD: ${ssm:RDS_PASSWORD}
    # S3_AWS_ACCESS_KEY_ID: ${env:S3_AWS_ACCESS_KEY_ID}
    # S3_AWS_SECRET_ACCESS_KEY: ${env:S3_AWS_SECRET_ACCESS_KEY}
    # GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID}
    # GOOGLE_CLIENT_SECRET: ${env:GOOGLE_CLIENT_SECRET}

  vpc:
    securityGroupIds:
      - sg-0c26def52725027a2
    subnetIds:
      - subnet-068eb19616780adb7 #public-subnet-a
      - subnet-0a5fe2e2a9acd001d #public-subnet-b

  iam:
    role:
      name: ${self:custom.SERVICE_NAME}
      # path:
      statements:
        - Effect: Allow
          Action:
            - "s3:*"
          Resource: "*"
functions:
  hello:
    handler: src/handler.hello
    events:
      - http:
          path: hello
          method: get